{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","dataurl.js","conversion.js","fetchID.js","character.js"],"names":["fileToDataURL","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","imgto64","FILE_INPUT","document","getElementById","files","console","log","dataURL","numIndex","indexOf","sliceData","slice","Conversion","IMAGE_DATA","PREVIEW","value","src","inputs","Array","from","querySelectorAll","values","map","trim","some","alert","fetchID","charID","fetch","fetchResponse","json","responseBody","charImage","querySelector","charName","charShortDescription","charLongDescription","localStorage","getItem","UPDATE_BUTTON","DELETE_BUTTON","SAVECHANGE_BUTTON","displayCharacter","image","innerHTML","name","shortDescription","description","CHAR_FORM","CHAR_CONTAINER","style","display","displayForm","addEventListener","updateCharacter","method","headers","body","JSON","stringify","setTimeout","window","location","replace","confirm","fetchDelete"],"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","file":"character.ea43ec0c.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/* DATA URL */\r\n\r\n\r\n\r\nexport const fileToDataURL = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    //const FILE_INPUT = document.getElementById(\"file\");\r\n    //let file = FILE_INPUT.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      resolve(reader.result);\r\n    };\r\n    reader.onerror = () => {\r\n      reject(\"Problem reading the file\");\r\n    };\r\n  });\r\n};\r\n\r\n// callback function\r\nexport const imgto64 = async () => {\r\n  const FILE_INPUT = document.getElementById(\"file\");\r\n  let file = FILE_INPUT.files[0];\r\n  console.log(file);\r\n  let dataURL = await fileToDataURL(file);\r\n  console.log(dataURL); //1\r\n  let numIndex = dataURL.indexOf(\"/9j\");\r\n  console.log(numIndex); //2\r\n  let sliceData = dataURL.slice(numIndex);\r\n  console.log(sliceData); //3\r\n  return sliceData;\r\n};\r\n\r\n\r\n\r\nexport const Conversion = async () => {\r\n    const IMAGE_DATA = document.getElementById(\"image\");\r\n    const PREVIEW = document.getElementById(\"preview__src\"); \r\n  if(IMAGE_DATA.value==null || PREVIEW.src!=`data:image/png;base64,${IMAGE_DATA.value}`){\r\n  IMAGE_DATA.value = await imgto64();\r\n}\r\n  let inputs = Array.from(document.querySelectorAll(\".textInput\"));\r\n  let values = inputs.map(({ value }) => {\r\n    return value.trim(); // Removes blank spaces before and after string input\r\n  });\r\n\r\n  if (values.some((value) => value === \"\")) {\r\n    alert(\"Please fill in all fields\");\r\n    return;\r\n  }\r\n\r\n  return values;\r\n};\r\n","import { imgto64 } from \"./dataurl.js\"; \r\n\r\nexport const Conversion = async () => {\r\n    const IMAGE_DATA = document.getElementById(\"image\");\r\n    const PREVIEW = document.getElementById(\"preview__src\");\r\n    \r\n    if(IMAGE_DATA.value==null || PREVIEW.src!=`data:image/png;base64,${IMAGE_DATA.value}`){\r\n    IMAGE_DATA.value = await imgto64();\r\n  }\r\n    let inputs = Array.from(document.querySelectorAll(\".textInput\"));\r\n    let values = inputs.map(({ value }) => {\r\n      return value.trim(); // Removes blank spaces before and after string input\r\n    });\r\n  \r\n    if (values.some((value) => value === \"\")) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n  \r\n    return values;\r\n  };\r\n  ","export const fetchID=async(charID)=>{\r\n    let fetchResponse= await fetch(`https://character-database.becode.xyz/characters/${charID}`);\r\n    let responseBody = await fetchResponse.json();\r\n    return responseBody;\r\n}","import \"regenerator-runtime\";\r\n\r\nimport {Conversion} from './conversion.js';\r\nimport { fetchID } from './fetchID.js';\r\n\r\nconst charImage=document.querySelector(\".characterCard__image\");\r\nconst charName=document.querySelector(\".characterCard__name\");\r\nconst charShortDescription=document.querySelector(\".characterCard__descriptionShort\");\r\nconst charLongDescription=document.querySelector(\".characterCard__descriptionLong\");\r\nconst charID=localStorage.getItem(\"charID\");\r\nconst UPDATE_BUTTON=document.getElementById(\"update\");\r\nconst DELETE_BUTTON=document.getElementById(\"delete\");\r\nconst SAVECHANGE_BUTTON=document.getElementById(\"saveChange\");\r\nconst PREVIEW = document.getElementById(\"preview__src\");\r\n\r\n\r\n\r\n\r\nconst displayCharacter = async () => {\r\n    // let fetchResponse= await fetch(`https://character-database.becode.xyz/characters/${charID}`);\r\n    // let responseBody = await fetchResponse.json();\r\n    let responseBody=await fetchID(charID);\r\n    charImage.src=`data:image/png;base64,${responseBody.image}`;\r\n    charName.innerHTML=responseBody.name;\r\n    charShortDescription.innerHTML=responseBody.shortDescription;\r\n    charLongDescription.innerHTML=responseBody.description;\r\n\r\n};\r\ndisplayCharacter();\r\n\r\nconst CHAR_FORM=document.getElementById(\"CHAR_FORM\");\r\nconst CHAR_CONTAINER=document.getElementById(\"CHAR_CONTAINER\");\r\n\r\n\r\nCHAR_FORM.style.display=\"none\";\r\n\r\nconst displayForm = async () => {\r\n    CHAR_CONTAINER.style.display = \"none\";\r\n    CHAR_FORM.style.display = \"block\";\r\n    // let fetchResponse = await fetch(`https://character-database.becode.xyz/characters/${charID}`);\r\n    // let responseBody = await fetchResponse.json();\r\n    let responseBody=await fetchID(charID);\r\n    PREVIEW.src =`data:image/png;base64,${responseBody.image}`;\r\n    document.getElementById(\"image\").value = responseBody.image;\r\n    document.getElementById(\"name\").value = responseBody.name;\r\n    document.getElementById(\"shortDescription\").value = responseBody.shortDescription;\r\n    document.getElementById(\"description\").value = responseBody.description;\r\n\r\n};\r\nUPDATE_BUTTON.addEventListener(\"click\", displayForm);\r\n\r\n\r\n  \r\nconst updateCharacter = async () => {\r\n    let [image, name,shortDescription, description] =await Conversion();\r\n\r\nlet fetchResponse = await fetch(\r\n    `https://character-database.becode.xyz/characters/${charID}`,\r\n    {\r\n    method: \"PUT\",\r\n    headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n        name,\r\n        shortDescription,\r\n        description,\r\n        image,\r\n    }),\r\n    }\r\n);\r\n\r\nalert(\"Character has been updated! You will be redirected to the main page.\");\r\nsetTimeout(\r\n    ()=> {window.location.replace(\"index.html\")},\r\n    1000);\r\n};\r\n  \r\n  \r\n// LISTENING TO CLICK EVENT ON SAVECHANGE BUTTON TO POST THE FORM\r\n\r\nSAVECHANGE_BUTTON.addEventListener(\"click\", updateCharacter);\r\n\r\n\r\n\r\n\r\ndocument.getElementById(\"delete\").addEventListener(\"click\",async()=>{\r\n\r\n    if(confirm(\"Are you sure you want to delete this character ?\")){\r\n\r\n\r\n       let fetchDelete= await fetch(`https://character-database.becode.xyz/characters/${charID}`, {\r\n     method: 'DELETE',\r\n     headers:{\r\n        'Content-Type': 'application/json'\r\n    }\r\n    })\r\n\r\n    };\r\n\r\n    alert(\"Successful delete. You will be redirected to the main page\");\r\n    setTimeout(\r\n        ()=> {window.location.replace(\"index.html\")},\r\n        1000);\r\n      \r\n\r\n\r\n    \r\n\r\n\r\n});\r\n"]}